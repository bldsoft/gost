// Code generated by mockery v2.33.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Authenticable is an autogenerated mock type for the Authenticable type
type Authenticable struct {
	mock.Mock
}

type Authenticable_Expecter struct {
	mock *mock.Mock
}

func (_m *Authenticable) EXPECT() *Authenticable_Expecter {
	return &Authenticable_Expecter{mock: &_m.Mock}
}

// ChangePasswordRequired provides a mock function with given fields:
func (_m *Authenticable) ChangePasswordRequired() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Authenticable_ChangePasswordRequired_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ChangePasswordRequired'
type Authenticable_ChangePasswordRequired_Call struct {
	*mock.Call
}

// ChangePasswordRequired is a helper method to define mock.On call
func (_e *Authenticable_Expecter) ChangePasswordRequired() *Authenticable_ChangePasswordRequired_Call {
	return &Authenticable_ChangePasswordRequired_Call{Call: _e.mock.On("ChangePasswordRequired")}
}

func (_c *Authenticable_ChangePasswordRequired_Call) Run(run func()) *Authenticable_ChangePasswordRequired_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Authenticable_ChangePasswordRequired_Call) Return(_a0 bool) *Authenticable_ChangePasswordRequired_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Authenticable_ChangePasswordRequired_Call) RunAndReturn(run func() bool) *Authenticable_ChangePasswordRequired_Call {
	_c.Call.Return(run)
	return _c
}

// Login provides a mock function with given fields:
func (_m *Authenticable) Login() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Authenticable_Login_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Login'
type Authenticable_Login_Call struct {
	*mock.Call
}

// Login is a helper method to define mock.On call
func (_e *Authenticable_Expecter) Login() *Authenticable_Login_Call {
	return &Authenticable_Login_Call{Call: _e.mock.On("Login")}
}

func (_c *Authenticable_Login_Call) Run(run func()) *Authenticable_Login_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Authenticable_Login_Call) Return(_a0 string) *Authenticable_Login_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Authenticable_Login_Call) RunAndReturn(run func() string) *Authenticable_Login_Call {
	_c.Call.Return(run)
	return _c
}

// Password provides a mock function with given fields:
func (_m *Authenticable) Password() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Authenticable_Password_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Password'
type Authenticable_Password_Call struct {
	*mock.Call
}

// Password is a helper method to define mock.On call
func (_e *Authenticable_Expecter) Password() *Authenticable_Password_Call {
	return &Authenticable_Password_Call{Call: _e.mock.On("Password")}
}

func (_c *Authenticable_Password_Call) Run(run func()) *Authenticable_Password_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Authenticable_Password_Call) Return(_a0 string) *Authenticable_Password_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Authenticable_Password_Call) RunAndReturn(run func() string) *Authenticable_Password_Call {
	_c.Call.Return(run)
	return _c
}

// SetPassword provides a mock function with given fields: _a0
func (_m *Authenticable) SetPassword(_a0 string) {
	_m.Called(_a0)
}

// Authenticable_SetPassword_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPassword'
type Authenticable_SetPassword_Call struct {
	*mock.Call
}

// SetPassword is a helper method to define mock.On call
//   - _a0 string
func (_e *Authenticable_Expecter) SetPassword(_a0 interface{}) *Authenticable_SetPassword_Call {
	return &Authenticable_SetPassword_Call{Call: _e.mock.On("SetPassword", _a0)}
}

func (_c *Authenticable_SetPassword_Call) Run(run func(_a0 string)) *Authenticable_SetPassword_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *Authenticable_SetPassword_Call) Return() *Authenticable_SetPassword_Call {
	_c.Call.Return()
	return _c
}

func (_c *Authenticable_SetPassword_Call) RunAndReturn(run func(string)) *Authenticable_SetPassword_Call {
	_c.Call.Return(run)
	return _c
}

// NewAuthenticable creates a new instance of Authenticable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuthenticable(t interface {
	mock.TestingT
	Cleanup(func())
}) *Authenticable {
	mock := &Authenticable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
