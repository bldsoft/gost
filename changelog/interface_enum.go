// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package changelog

import (
	"errors"
	"fmt"
)

const (
	// SortFieldTimestamp is a SortField of type Timestamp.
	SortFieldTimestamp SortField = iota
	// SortFieldUser is a SortField of type User.
	SortFieldUser
	// SortFieldOperation is a SortField of type Operation.
	SortFieldOperation
	// SortFieldEntity is a SortField of type Entity.
	SortFieldEntity
)

var ErrInvalidSortField = errors.New("not a valid SortField")

const _SortFieldName = "TimestampUserOperationEntity"

var _SortFieldMap = map[SortField]string{
	SortFieldTimestamp: _SortFieldName[0:9],
	SortFieldUser:      _SortFieldName[9:13],
	SortFieldOperation: _SortFieldName[13:22],
	SortFieldEntity:    _SortFieldName[22:28],
}

// String implements the Stringer interface.
func (x SortField) String() string {
	if str, ok := _SortFieldMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SortField(%d)", x)
}

var _SortFieldValue = map[string]SortField{
	_SortFieldName[0:9]:   SortFieldTimestamp,
	_SortFieldName[9:13]:  SortFieldUser,
	_SortFieldName[13:22]: SortFieldOperation,
	_SortFieldName[22:28]: SortFieldEntity,
}

// ParseSortField attempts to convert a string to a SortField.
func ParseSortField(name string) (SortField, error) {
	if x, ok := _SortFieldValue[name]; ok {
		return x, nil
	}
	return SortField(0), fmt.Errorf("%s is %w", name, ErrInvalidSortField)
}

const (
	// SortOrderASC is a SortOrder of type ASC.
	SortOrderASC SortOrder = iota
	// SortOrderDESC is a SortOrder of type DESC.
	SortOrderDESC
)

var ErrInvalidSortOrder = errors.New("not a valid SortOrder")

const _SortOrderName = "ASCDESC"

var _SortOrderMap = map[SortOrder]string{
	SortOrderASC:  _SortOrderName[0:3],
	SortOrderDESC: _SortOrderName[3:7],
}

// String implements the Stringer interface.
func (x SortOrder) String() string {
	if str, ok := _SortOrderMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SortOrder(%d)", x)
}

var _SortOrderValue = map[string]SortOrder{
	_SortOrderName[0:3]: SortOrderASC,
	_SortOrderName[3:7]: SortOrderDESC,
}

// ParseSortOrder attempts to convert a string to a SortOrder.
func ParseSortOrder(name string) (SortOrder, error) {
	if x, ok := _SortOrderValue[name]; ok {
		return x, nil
	}
	return SortOrder(0), fmt.Errorf("%s is %w", name, ErrInvalidSortOrder)
}
