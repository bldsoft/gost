// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package common

import (
	"errors"
	"fmt"
)

const (
	// DiscoveryTypeNone is a DiscoveryType of type none.
	DiscoveryTypeNone DiscoveryType = "none"
	// DiscoveryTypeInHouse is a DiscoveryType of type in-house.
	DiscoveryTypeInHouse DiscoveryType = "in-house"
	// DiscoveryTypeConsul is a DiscoveryType of type consul.
	DiscoveryTypeConsul DiscoveryType = "consul"
)

var ErrInvalidDiscoveryType = errors.New("not a valid DiscoveryType")

// String implements the Stringer interface.
func (x DiscoveryType) String() string {
	return string(x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x DiscoveryType) IsValid() bool {
	_, err := ParseDiscoveryType(string(x))
	return err == nil
}

var _DiscoveryTypeValue = map[string]DiscoveryType{
	"none":     DiscoveryTypeNone,
	"in-house": DiscoveryTypeInHouse,
	"consul":   DiscoveryTypeConsul,
}

// ParseDiscoveryType attempts to convert a string to a DiscoveryType.
func ParseDiscoveryType(name string) (DiscoveryType, error) {
	if x, ok := _DiscoveryTypeValue[name]; ok {
		return x, nil
	}
	return DiscoveryType(""), fmt.Errorf("%s is %w", name, ErrInvalidDiscoveryType)
}
