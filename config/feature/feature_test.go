package feature_test

import (
	"fmt"
	"time"

	"github.com/bldsoft/gost/config/feature"
)

func ExampleNewCustomFeature() {
	// Color is a struct generated by github.com/abice/go-enum
	color := feature.NewCustomFeature(0, ColorWhite, ParseColor).
		AddOnChangeHandler(func(c Color) {
			fmt.Println(c)
		})

	fmt.Println(color.Get())
	color.SetFromString("Red")
	color.Set(ColorWhite)
	color.SetFromString("InvalidValue")

	// Output:
	// White
	// Red
	// White
}

func ExampleNewFeature() {
	intFeature := feature.NewFeature(0, 1).
		AddOnChangeHandler(func(v int) {
			fmt.Println(v)
		})

	fmt.Println(intFeature.Get())
	intFeature.SetFromString("2")
	intFeature.Set(3)

	stringFeature := feature.NewFeature(0, "string1").
		AddOnChangeHandler(func(v string) {
			fmt.Println(v)
		})

	fmt.Println(stringFeature.Get())
	stringFeature.SetFromString("string2")
	stringFeature.Set("string3")

	// Output:
	// 1
	// 2
	// 3
	// string1
	// string2
	// string3
}

func ExampleNewSeconds() {
	mins := feature.NewSeconds(0, 1).
		AddOnChangeHandler(func(d time.Duration) {
			fmt.Println(d)
		})

	fmt.Println(mins.Get())
	mins.SetFromString("2")
	mins.Set(3 * time.Second) // set time.Duration

	// Output:
	// 1s
	// 2s
	// 3s
}

func ExampleNewMinutes() {
	mins := feature.NewMinutes(0, 1).
		AddOnChangeHandler(func(d time.Duration) {
			fmt.Println(d)
		})

	fmt.Println(mins.Get())
	mins.SetFromString("2")
	mins.Set(3 * time.Minute) // set time.Duration

	// Output:
	// 1m0s
	// 2m0s
	// 3m0s
}
